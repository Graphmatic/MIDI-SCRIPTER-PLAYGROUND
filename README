README


If that turn into endless loop, it's cause of a misusing of ParameterChanged(), where normally you never had to call SetParameter or UpdatePluginParameters(). I've spend time on this because of misunderstanding how to use this callback function. But this solution works, 
And maybe someone else will need to do things this way.

After some tweaking, I discovered that ParameterChanged() have and undocumented property named "caller", that get a value of "null" if 
ParameterChanged() is called from a change on the UI or from SetParameter(), and get as value the function from where it's triggered 
if it's triggered from any function elsewhere in the code (excepted of course SetParameter() ).


The POC contains many Trace() so you can check all this stuff.

Just copy/paste the content of .js file into your MIDI Scripter.

If you have to deal with other undocumented functions or objects, as the documentation is really crappy, this JS snippet may help you:

var objs = Object.getOwnPropertyNames(TheObjectYouWantToTest);
for(var i in objs ){
  Trace(objs[i]);
}
or to know if a given property is a function:

var functionNames = [];

Object.getOwnPropertyNames(TheObjectYouWantToTest).forEach(function(property) {
  if(typeof obj[property] === 'function') {
    functionNames.push(property);
  }
});
for(var i in functionNames )
{ 
   Trace(functionNames[i]);
}
